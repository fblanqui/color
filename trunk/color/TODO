
- ADP/chain_min_fun: the assumption (Vforall SNR ts) is useless

- replace andb_elim by some rewrite

- define hd_red_mod from hd_red_Mod

- remove from RelExtras the things already defined in RelUtil

- use RelUtil notations in RelExtras

- hd_red_mod_min: replace direct_subterms by Vforall SN?

- hd_red_mod_min: needs to be symmetric?

- define eq_term_dec from beq_term

- only defined symbols need to be marked

- replace rev by rev'

- extend WF_sred_of_WF_red to red_mod

- replace eq_nat_dec by NatUtil.eq_nat_dec

- give a signature to every morphism to avoid coq warnings on iff

- remove warnings occurring at compilation

- strange thing about eq_nat_dec and Hint Resolve eq_nat_dec : terms.
see Term/SimpleType/TermsTyping.v.

- vm_compute: make sure that the calls to vm_compute are really necessary

- MI: try to improve performance

- MPO: remove MPO hypotheses (put them into a section?)

- RPO: solve problems with decidability procedure
(dealing with RPO for concrete terms)

- RPO: support for Rainbow

- DP: add improvement to DP pairs by ignoring pairs where rhs is a
subterm of lhs

- AF: extend by allowing collapsing argument filterings

- General: make problem statement (including signature)
explicit at every proof step

- define strategies

- replace defs and lemmas when they are added in coq std lib

- replace decidability lemmas by boolean functions

- remove the use of beq_dec and beqtac

- replace unary integers by binary integers?

Done list:
----------

- absurd_hyp is OBSOLETE: use contradict instead.

- Eqdep uses an axiom: it is still used in ATerm and ACap (grep Eqdep)
and in the tactic Funeqtac. is it possible to get rid of it by using
Eqdep_dec only? yes

- DP: improve by introducing marked symbols

- move ListExt into ListUtil
